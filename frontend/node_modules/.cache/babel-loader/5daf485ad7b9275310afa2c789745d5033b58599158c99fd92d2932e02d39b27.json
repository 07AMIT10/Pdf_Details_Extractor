{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sheet\\\\Downloads\\\\66d014c971c27_Robotics\\\\Robotics\\\\jobsforce_task\\\\Proj\\\\frontend\\\\src\\\\components\\\\UploadForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadForm = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    name: '',\n    phone: '',\n    address: ''\n  });\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const handleFileUpload = async e => {\n    const file = e.target.files[0];\n    if (!file) return;\n    if (file.size > 10 * 1024 * 1024) {\n      setError('File size exceeds 10MB limit');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('file', file);\n    try {\n      setLoading(true);\n      setError('');\n      const response = await axios.post('http://localhost:5000/extract', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      if (response.data.success) {\n        setFormData({\n          name: response.data.data.name,\n          phone: response.data.data.phone,\n          address: response.data.data.address\n        });\n      } else {\n        setError(response.data.error || 'Failed to extract data');\n      }\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || 'Server Error');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Document Information Extractor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"application/pdf\",\n        onChange: handleFileUpload,\n        disabled: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Processing PDF...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-fields\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: formData.name,\n          readOnly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Phone:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"tel\",\n          value: formData.phone,\n          readOnly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Address:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: formData.address,\n          readOnly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(UploadForm, \"GfGv/nUW1Q4oz2pkNdPfO8kxccA=\");\n_c = UploadForm;\nexport default UploadForm;\nvar _c;\n$RefreshReg$(_c, \"UploadForm\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","UploadForm","_s","formData","setFormData","name","phone","address","loading","setLoading","error","setError","handleFileUpload","e","file","target","files","size","FormData","append","response","post","headers","data","success","err","_err$response","_err$response$data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","disabled","value","readOnly","_c","$RefreshReg$"],"sources":["C:/Users/sheet/Downloads/66d014c971c27_Robotics/Robotics/jobsforce_task/Proj/frontend/src/components/UploadForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst UploadForm = () => {\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    phone: '',\r\n    address: ''\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n\r\n  const handleFileUpload = async (e) => {\r\n    const file = e.target.files[0];\r\n    if (!file) return;\r\n\r\n    if (file.size > 10 * 1024 * 1024) {\r\n      setError('File size exceeds 10MB limit');\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n\r\n    try {\r\n      setLoading(true);\r\n      setError('');\r\n      const response = await axios.post('http://localhost:5000/extract', formData, {\r\n        headers: { 'Content-Type': 'multipart/form-data' }\r\n      });\r\n\r\n      if (response.data.success) {\r\n        setFormData({\r\n          name: response.data.data.name,\r\n          phone: response.data.data.phone,\r\n          address: response.data.data.address\r\n        });\r\n      } else {\r\n        setError(response.data.error || 'Failed to extract data');\r\n      }\r\n    } catch (err) {\r\n      setError(err.response?.data?.error || 'Server Error');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-container\">\r\n      <h2>Document Information Extractor</h2>\r\n      <div className=\"upload-section\">\r\n        <input\r\n          type=\"file\"\r\n          accept=\"application/pdf\"\r\n          onChange={handleFileUpload}\r\n          disabled={loading}\r\n        />\r\n        {loading && <p>Processing PDF...</p>}\r\n      </div>\r\n\r\n      {error && <div className=\"error\">{error}</div>}\r\n\r\n      <div className=\"form-fields\">\r\n        <label>\r\n          Name:\r\n          <input\r\n            type=\"text\"\r\n            value={formData.name}\r\n            readOnly\r\n          />\r\n        </label>\r\n\r\n        <label>\r\n          Phone:\r\n          <input\r\n            type=\"tel\"\r\n            value={formData.phone}\r\n            readOnly\r\n          />\r\n        </label>\r\n\r\n        <label>\r\n          Address:\r\n          <textarea\r\n            value={formData.address}\r\n            readOnly\r\n          />\r\n        </label>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UploadForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}